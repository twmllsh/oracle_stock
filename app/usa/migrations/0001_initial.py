# Generated by Django 5.1.1 on 2024-11-20 13:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ticker_usa',
            fields=[
                ('symbol', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('sector', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
                ('create_at', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Ticker_usa',
                'verbose_name_plural': 'Tickers_usa',
            },
        ),
        migrations.CreateModel(
            name='Info_usa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('Index', models.CharField(max_length=30)),
                ('Market_Cap', models.FloatField(blank=True, null=True)),
                ('Income', models.FloatField(blank=True, null=True)),
                ('Sales', models.FloatField(blank=True, null=True)),
                ('Book_sh', models.FloatField(blank=True, null=True)),
                ('Cash_sh', models.FloatField(blank=True, null=True)),
                ('Dividend_Est', models.FloatField(blank=True, null=True)),
                ('Dividend_TTM', models.FloatField(blank=True, null=True)),
                ('Dividend_Ex_Date', models.DateField(null=True)),
                ('Employees', models.FloatField(blank=True, null=True)),
                ('Sales_Surprise', models.FloatField(blank=True, null=True)),
                ('P_E', models.FloatField(blank=True, null=True)),
                ('Forward_P_E', models.FloatField(blank=True, null=True)),
                ('PEG', models.FloatField(blank=True, null=True)),
                ('P_S', models.FloatField(blank=True, null=True)),
                ('P_B', models.FloatField(blank=True, null=True)),
                ('P_C', models.FloatField(blank=True, null=True)),
                ('P_FCF', models.FloatField(blank=True, null=True)),
                ('Debt_Eq', models.FloatField(blank=True, null=True)),
                ('LT_Debt_Eq', models.FloatField(blank=True, null=True)),
                ('EPS_Surprise', models.FloatField(blank=True, null=True)),
                ('EPS_ttm', models.FloatField(blank=True, null=True)),
                ('EPS_next_Y', models.FloatField(blank=True, null=True)),
                ('EPS_next_Q', models.FloatField(blank=True, null=True)),
                ('EPS_this_Y', models.FloatField(blank=True, null=True)),
                ('EPS_next_5Y', models.FloatField(blank=True, null=True)),
                ('EPS_past_5Y', models.FloatField(blank=True, null=True)),
                ('Sales_past_5Y', models.FloatField(blank=True, null=True)),
                ('EPS_Y_Y_TTM', models.FloatField(blank=True, null=True)),
                ('Sales_Y_Y_TTM', models.FloatField(blank=True, null=True)),
                ('EPS_Q_Q', models.FloatField(blank=True, null=True)),
                ('Sales_Q_Q', models.FloatField(blank=True, null=True)),
                ('Insider_Own', models.FloatField(blank=True, null=True)),
                ('Insider_Trans', models.FloatField(blank=True, null=True)),
                ('Inst_Own', models.FloatField(blank=True, null=True)),
                ('Inst_Trans', models.FloatField(blank=True, null=True)),
                ('ROA', models.FloatField(blank=True, null=True)),
                ('ROE', models.FloatField(blank=True, null=True)),
                ('ROI', models.FloatField(blank=True, null=True)),
                ('Gross_Margin', models.FloatField(blank=True, null=True)),
                ('Oper_Margin', models.FloatField(blank=True, null=True)),
                ('Profit_Margin', models.FloatField(blank=True, null=True)),
                ('Payout', models.FloatField(blank=True, null=True)),
                ('Shs_Outstand', models.FloatField(blank=True, null=True)),
                ('Shs_Float', models.FloatField(blank=True, null=True)),
                ('Short_Float', models.FloatField(blank=True, null=True)),
                ('Short_Ratio', models.FloatField(blank=True, null=True)),
                ('Short_Interest', models.FloatField(blank=True, null=True)),
                ('Recom', models.FloatField(blank=True, null=True)),
                ('Perf_Week', models.FloatField(blank=True, null=True)),
                ('Perf_Month', models.FloatField(blank=True, null=True)),
                ('Perf_Quarter', models.FloatField(blank=True, null=True)),
                ('Perf_Half_Y', models.FloatField(blank=True, null=True)),
                ('Perf_Year', models.FloatField(blank=True, null=True)),
                ('Perf_YTD', models.FloatField(blank=True, null=True)),
                ('Beta', models.FloatField(blank=True, null=True)),
                ('Target_Price', models.FloatField(blank=True, null=True)),
                ('ticker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usa.ticker_usa')),
            ],
            options={
                'verbose_name': '기본정보',
                'verbose_name_plural': '기본정보 목록',
            },
        ),
    ]
